/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;

import Clases.Departamentos;
import Conexion.Conexion;
import Conexion.ModeloProveedores;
import java.util.ArrayList;
import java.sql.Connection;
import Clases.Proveedor;
import Conexion.ModeloDepartamentos;
import Conexion.ModeloEmpleados;
import Clases.Empleados;
import static Vistas.IngresarCompra.proveedorSeleccionadoNombre;
import java.sql.PreparedStatement;
import java.util.Calendar;
import java.util.Date;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
/**
 *
 * @author Andrea
 */
public class editarMaquinaria extends javax.swing.JFrame {
    Conexion enlace = new Conexion();
    Connection conection = enlace.getConexion();
    /**
     * Creates new form editarMaquinaria
     */
    public editarMaquinaria() {
        initComponents();
        setResizable(false);
        llenarProveedor();
        llenarDepartamento();
        llenarEmpleado();
        
        //para que la fecha no sea mayor a la actual y menor que la actual
        // Obtener la fecha actual
        Calendar calendar = Calendar.getInstance();
        calendar.add(Calendar.MONTH, 0); // Agregar un mes a la fecha actual

        // Establecer la fecha mínima seleccionable en el componente Fecha
        Fecha.setMaxSelectableDate(new Date());
    }
        
    private void llenarProveedor(){
        ModeloProveedores modProv = new ModeloProveedores();
        ArrayList<Proveedor> listaProveedores = modProv.getProveedor();
        int proveedorSeleccionadoId = 0;
        //proveedorSeleccionadoNombre = "";
        
        //Proveedor.removeAllItems();//Proveedores.removeAllItems();
        
        for(int i = 0; i < listaProveedores.size(); i++ ){
            Proveedores.addItem(new Proveedor(listaProveedores.get(i).getId(),
                    listaProveedores.get(i).getNombre()));
            
            int indiceSeleccionado = Proveedores.getSelectedIndex();
            
            if (indiceSeleccionado == i) {
                // Guardar el ID del proveedor seleccionado
                proveedorSeleccionadoId = listaProveedores.get(i).getId();
                proveedorSeleccionadoNombre = listaProveedores.get(i).getNombre();
            }
        }    
    }
     //Metodo para llenar el comboox de Departamentos
 private void llenarDepartamento() {
        ModeloDepartamentos modDep = new ModeloDepartamentos();
        ArrayList<Departamentos> listaDepartamentos = modDep.getDepartamentos();
        int departamentoSelecionado = 0;
        
        depto.removeAllItems();
        
        
        for(int i = 0; i < listaDepartamentos.size(); i++ ){
            depto.addItem(new Departamentos(listaDepartamentos.get(i).getId(),
                    listaDepartamentos.get(i).getNombre()));
            
            int indiceSeleccionado = depto.getSelectedIndex();
            
            if (indiceSeleccionado == i) {
                // Guardar el ID del proveedor seleccionado
                departamentoSelecionado = listaDepartamentos.get(i).getId();
               
            }
        }
    }
    //Metodo para llenar el empleado
  private void llenarEmpleado() {
        ModeloEmpleados modEmp = new ModeloEmpleados();
        ArrayList<Empleados> listaEmpleados = modEmp.getEmpleados();
        int empleadoSelecionado = 0;
        
        PersonasAsignadas.removeAllItems();
        
        for(int i = 0; i < listaEmpleados.size(); i++ ){
            PersonasAsignadas.addItem(new Empleados(listaEmpleados.get(i).getId(),
                    listaEmpleados.get(i).getNombre()));
            
            int indiceSeleccionado = PersonasAsignadas.getSelectedIndex();
            
            if (indiceSeleccionado == i) {
                // Guardar el ID del proveedor seleccionado
                empleadoSelecionado = listaEmpleados.get(i).getId();
               
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        placa = new javax.swing.JFormattedTextField();
        valor = new javax.swing.JTextField();
        FondoCompras = new javax.swing.JTextField();
        nInventario = new javax.swing.JTextField();
        cheque = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        estado = new javax.swing.JComboBox<>();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArticulo = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        Proveedores = new javax.swing.JComboBox();
        depto = new javax.swing.JComboBox();
        Fecha = new com.toedter.calendar.JDateChooser();
        PersonasAsignadas = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        Imagen = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Dubai", 1, 24)); // NOI18N
        jLabel1.setText("Editar maquinaria pesada");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel3.setText("Estado:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 90, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel4.setText("#placa:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 150, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel5.setText("Descripcion de maquinaria y vehículos:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 275, 28));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel6.setText("Departamento:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 260, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel7.setText("Valor:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 320, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel8.setText("Fondo de compra:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 380, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel9.setText("Fecha de compra:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, -1, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel10.setText("# de cheque:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 430, -1, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel11.setText("Proveedor:");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 500, -1, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel12.setText("# de inventario:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 490, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel2.setText("Articulo:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 138, -1, -1));

        try {
            placa.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("U UU ####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        placa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                placaKeyTyped(evt);
            }
        });
        jPanel1.add(placa, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 150, 169, -1));

        valor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        valor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                valorKeyTyped(evt);
            }
        });
        jPanel1.add(valor, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 320, 100, -1));

        FondoCompras.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        FondoCompras.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FondoComprasKeyTyped(evt);
            }
        });
        jPanel1.add(FondoCompras, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 380, 170, -1));

        nInventario.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nInventario.setToolTipText("");
        nInventario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nInventarioKeyTyped(evt);
            }
        });
        jPanel1.add(nInventario, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 490, 180, -1));

        cheque.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cheque.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                chequeKeyTyped(evt);
            }
        });
        jPanel1.add(cheque, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 430, 180, -1));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel13.setText("Persona asignada:");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 90, -1, -1));

        estado.setBackground(new java.awt.Color(253, 253, 253));
        estado.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        estado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bueno", "Regular", "Malo" }));
        jPanel1.add(estado, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 90, 169, -1));

        btnGuardar.setBackground(new java.awt.Color(253, 253, 253));
        btnGuardar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Editar.png"))); // NOI18N
        btnGuardar.setText("Editar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 590, -1, -1));

        btnCancelar.setBackground(new java.awt.Color(253, 253, 253));
        btnCancelar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cancelar.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 590, -1, -1));

        txtArticulo.setColumns(20);
        txtArticulo.setLineWrap(true);
        txtArticulo.setRows(5);
        txtArticulo.setWrapStyleWord(true);
        txtArticulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtArticuloKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtArticulo);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, -1, -1));

        txtDescripcion.setColumns(20);
        txtDescripcion.setLineWrap(true);
        txtDescripcion.setRows(5);
        txtDescripcion.setWrapStyleWord(true);
        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(txtDescripcion);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, -1, -1));

        jPanel1.add(Proveedores, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 500, 170, -1));

        depto.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        depto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Gerencia", "Tesoreria", "UMI", "bienes y proveeduria" }));
        jPanel1.add(depto, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 260, 250, -1));

        Fecha.setToolTipText("");
        Fecha.setDateFormatString("yyyy/MM/dd");
        jPanel1.add(Fecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 440, 130, 30));

        PersonasAsignadas.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        PersonasAsignadas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        PersonasAsignadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PersonasAsignadasActionPerformed(evt);
            }
        });
        jPanel1.add(PersonasAsignadas, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 92, 152, -1));

        jLabel14.setFont(new java.awt.Font("Dubai", 1, 24)); // NOI18N
        jLabel14.setText("Editar maquinaria y vehículo pesado");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, -1, -1));

        Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/alcaldiaMaquinaria.jpg"))); // NOI18N
        jPanel1.add(Imagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, 470, 650));

        txtid.setEditable(false);
        txtid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidActionPerformed(evt);
            }
        });
        jPanel1.add(txtid, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 210, 0, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 846, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 656, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidActionPerformed
        
    }//GEN-LAST:event_txtidActionPerformed

    private void txtArticuloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtArticuloKeyTyped
      //Variables para el tipo de texto
        String currentText = txtArticulo.getText();
        char keyPressed = evt.getKeyChar();
        //Validar que solo se puedan 500 caracteres
         if(txtArticulo.getText().length() >= 500){
            getToolkit().beep();
            evt.consume();
         }
        //No deja que inicie con caracteres especiales, ni numeros ni espacios
        String regex = "^[A-Za-z].*";
        if (currentText.length() == 0 && !Pattern.matches(regex, String.valueOf(keyPressed))) {
            // Si el texto está vacío y el carácter presionado no es una letra, evita agregar el carácter al inicio.
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtArticuloKeyTyped

    private void PersonasAsignadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PersonasAsignadasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PersonasAsignadasActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyTyped
        // TODO add your handling code here:
        //Variables para el tipo de texto
        String currentText = txtDescripcion.getText();
        char keyPressed = evt.getKeyChar();
        
        //Validacion para que no acepte mas de 500 caracteres
        if(txtDescripcion.getText().length() >= 500){
            getToolkit().beep();
            evt.consume();
        }
        
        //No deja que inicie con caracteres especiales, ni numeros ni espacios
        String regex = "^[A-Za-z].*";
        if (currentText.length() == 0 && !Pattern.matches(regex, String.valueOf(keyPressed))) {
            // Si el texto está vacío y el carácter presionado no es una letra, evita agregar el carácter al inicio.
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtDescripcionKeyTyped

    private void placaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_placaKeyTyped
        // TODO add your handling code here:
        if (placa.getText().startsWith("B")) {
            // Emitir un sonido de error
            getToolkit().beep();
            // mensaje para el evento para evitar que se ingrese el una letra que no sea B
            JOptionPane.showMessageDialog(null, "La placa de un vehiculo no puede iniciar"
                    + "\n con la letra B","Error al escribir la placa del vehiculo",
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_placaKeyTyped

    private void FondoComprasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FondoComprasKeyTyped
        //Variables para el tipo de texto
        String currentText = FondoCompras.getText();
        char keyPressed = evt.getKeyChar();
        //Validar que solo se puedan ingresar 200 digitos
        if(FondoCompras.getText().length() >= 200){
            getToolkit().beep();
            evt.consume();
        }
        
        //No deja que inicie con caracteres especiales, ni numeros ni espacios
        String regex = "^[A-Za-z].*";
        if (currentText.length() == 0 && !Pattern.matches(regex, String.valueOf(keyPressed))) {
            // Si el texto está vacío y el carácter presionado no es una letra, evita agregar el carácter al inicio.
            getToolkit().beep();
            evt.consume();
        }
        //No acepta caracteres especiales, solo espacios, puntos y comas
        String regexX = "^[A-Za-z0-9, .]+$";
        
        if (!Pattern.matches(regexX, currentText + keyPressed)) {
            // Si el carácter presionado no cumple con la expresión regular, evita agregarlo al texto.
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_FondoComprasKeyTyped

    private void valorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorKeyTyped
        String currentText = valor.getText();
        char keyPressed = evt.getKeyChar();
        //Validar que solo se puedan ingresar 10 digitos
        if(valor.getText().length() >= 10){
            getToolkit().beep();
            evt.consume();
        }
        
        //validacion para que no se pueda ingresar un cero o un . al principio
        if (valor.getText().startsWith("0") || valor.getText().startsWith(".") ) {
            // Emitir un sonido de error
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "El valor no puede iniciar con cero(0)"
                    + "\n ni un punto(.)","Error al escribir el valor de la maquinaria",
                    JOptionPane.WARNING_MESSAGE);
            // Consumir el evento para evitar que se ingrese el cero
            evt.consume();
        }
        
        //validacion para que no acepte letras
        char validar= evt.getKeyChar();
        if(Character.isLetter(validar)){
            getToolkit().beep();
            evt.consume();
        }
        
        String regex = "^[0-9.]+$";
        if (!Pattern.matches(regex, currentText + keyPressed)) {
            // Si el carácter presionado no cumple con la expresión regular, evita agregarlo al texto.
            evt.consume();
        }
    }//GEN-LAST:event_valorKeyTyped

    private void chequeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chequeKeyTyped
        //Validar que solo se puedan ingresar 9 digitos
        if(cheque.getText().length() >= 9){
            getToolkit().beep();
            evt.consume();
        }
        
        //validacion para que no acepte letras
        char validar= evt.getKeyChar();
        if(Character.isLetter(validar)){
            getToolkit().beep();
            evt.consume();
        }
        
        //validacion de que no permita espacios o caracteres especiales
        if(evt.getKeyChar() >=30 && evt.getKeyChar() <= 47 || evt.getKeyChar() >=58 && evt.getKeyChar() <= 97){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_chequeKeyTyped

    private void nInventarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nInventarioKeyTyped
        //Variables para el tipo de texto
        String currentText = nInventario.getText();
        char keyPressed = evt.getKeyChar();
        
        //Validar que solo se puedan ingresar mas de 100 digitos
        if(nInventario.getText().length() >= 20){
            getToolkit().beep();
            evt.consume();
        }
        
        //No deja que inicie con caracteres especiales, ni numeros ni espacios
        String regex = "^[A-Za-z0-9].*";
        if (currentText.length() == 0 && !Pattern.matches(regex, String.valueOf(keyPressed))) {
            // Si el texto está vacío y el carácter presionado no es una letra, evita agregar el carácter al inicio.
            getToolkit().beep();
            evt.consume();
        }
        
        //Validacion para que acepte espacios pero no puntos ni comas ni special characters
        String regexX = "^[A-Za-z0-9 ]+$";
        
        if (!Pattern.matches(regexX, currentText + keyPressed)) {
            // Si el carácter presionado no cumple con la expresión regular, evita agregarlo al texto.
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_nInventarioKeyTyped

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        //variable que guarda la fecha
        String fcha = ((JTextField)Fecha.getDateEditor().getUiComponent()).getText();
        Date fechaSeleccionada = Fecha.getDate();
        
        try {

            //convertir los datos del campo de valor a doule 
            double valorDouble = Double.parseDouble(valor.getText());            
            //Convertir los datos que sean enteros
            int chequeInt = Integer.parseInt(cheque.getText());
            //El statement para guardar los datos en la db
            PreparedStatement editar = conection.prepareStatement("UPDATE maquinaria SET persona_asignada = ?, estado = ?, articulo = ?,numPlaca = ?, departamento = ?, descripcion = ?, valor = ?, fondo_compra = ?, fecha = ?, num_cheque = ?,proveedorfk = ?, cod_inventario = ? WHERE id = ?" );
            
               Empleados empleadoSeleccionado = (Empleados) PersonasAsignadas.getSelectedItem();
            if (empleadoSeleccionado != null) {
                int idEmpleadoSeleccionado = empleadoSeleccionado.getId();
                editar.setInt(1, idEmpleadoSeleccionado);
            }
            //editar.setInt(1,PersonasAsignadas.getSelectedIndex());
            editar.setString(2, estado.getSelectedItem().toString());
            editar.setString(3, txtArticulo.getText());
            editar.setString(4, placa.getText());
            Departamentos departamentoSeleccionado = (Departamentos) depto.getSelectedItem();
            if (departamentoSeleccionado != null) {
                int idDepartamentoSeleccionado = departamentoSeleccionado.getId();
                editar.setInt(5, idDepartamentoSeleccionado);
            }
            //editar.setInt(5, depto.getSelectedIndex());
            editar.setString(6, txtDescripcion.getText());
            editar.setDouble(7, valorDouble);
            editar.setString(8, FondoCompras.getText());
            editar.setString(9, fcha);
            editar.setInt(10, chequeInt);
            Proveedor proveedorSeleccionado = (Proveedor) Proveedores.getSelectedItem();
            if (proveedorSeleccionado != null) {
                int idProveedorSeleccionado = proveedorSeleccionado.getId();
                editar.setInt(11, idProveedorSeleccionado);
            }

            //editar.setInt(11, Proveedores.getSelectedIndex());
            editar.setString(12, nInventario.getText());
            editar.setString(13, txtid.getText());

            
            if(txtArticulo.getText().isEmpty() || placa.getText().isEmpty() || txtDescripcion.getText().isEmpty()
                    || valor.getText().isEmpty() || FondoCompras.getText().isEmpty() || fechaSeleccionada == null
                    || cheque.getText().isEmpty() || nInventario.getText().isEmpty()){
                JOptionPane.showMessageDialog(null,"Hay datos vacios"
                ,"Error al guardar la maquinaria o vehiculo pesado",JOptionPane.WARNING_MESSAGE);
            }
            
            if(cheque.getText().equals("0000")){
                JOptionPane.showMessageDialog(null,"Numero de cheque no valido"
                ,"Error al digitar el numero de cheque",JOptionPane.WARNING_MESSAGE);
            }
            
            if(placa.getText().startsWith("B")){
                JOptionPane.showMessageDialog(null, "La placa de un vehiculo no puede iniciar"
                    + "\n con la letra B","Error al escribir la placa del vehiculo",
                    JOptionPane.WARNING_MESSAGE);
            }
            else{
                editar.executeUpdate();
                this.dispose();
             JOptionPane.showMessageDialog(null, "Maquinaria o vehiculo pesado Editado Exitosamente!", "guardado con éxito", 
                     JOptionPane.INFORMATION_MESSAGE);
            } 
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al guardar"+e
            ,"Error al guardar la maquinaria o vehiculo pesado",
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(editarMaquinaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(editarMaquinaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(editarMaquinaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(editarMaquinaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new editarMaquinaria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static com.toedter.calendar.JDateChooser Fecha;
    public static javax.swing.JTextField FondoCompras;
    private javax.swing.JLabel Imagen;
    public static javax.swing.JComboBox PersonasAsignadas;
    public static javax.swing.JComboBox Proveedores;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    public static javax.swing.JTextField cheque;
    public static javax.swing.JComboBox depto;
    public static javax.swing.JComboBox<String> estado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTextField nInventario;
    public static javax.swing.JFormattedTextField placa;
    public static javax.swing.JTextArea txtArticulo;
    public static javax.swing.JTextArea txtDescripcion;
    public static javax.swing.JTextField txtid;
    public static javax.swing.JTextField valor;
    // End of variables declaration//GEN-END:variables
}
